{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../FlashForward.svelte",
    "../../Launch.svelte",
    "../../FlashCard.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport FlashCard from './FlashCard.svelte';\n\timport { slide } from 'svelte/transition';\n\n\texport let upper = 11;\n\texport let num_problems = 100;\n    export let op_mult = true;\n    export let op_div = false;\n\n\tlet random_facts = [];\n\tlet squares = [];\n\tfor (var x=2; x<=upper; x++) {\n\t\tfor (var y=2; y<=upper; y++) {\n\t\t\tconst product = x * y;\n            if (op_mult) {\n                var mult = pick_one();\n                random_facts.push([\n                    mult.roll, x, y, product, mult.unknown, \"x\"\n                ]);\n            }\n            if (op_div) {\n                var div = pick_one();\n                random_facts.push([\n                    div.roll, product, x, y, div.unknown, \"รท\"\n                ]);\n            }\n\t\t}\n\t}\n\trandom_facts.sort();\n\tlet facts = random_facts.splice(0, num_problems).map(function(f) {\n\t  f.splice(0, 1);\n\t  return f;\n\t});\n\n    let prompt_index = 0;\n    let answer_index = -1;\n\n    function pick_one() {\n        var rolls = [\n            [Math.random(), 0],\n            [Math.random(), 1],\n            [Math.random(), 2],\n        ];\n        rolls.sort();\n        return {\n            roll: rolls[0][0],\n            unknown: rolls[0][1],\n        };\n    }\n\n\tfunction show_next() {\n        answer_index += 1;\n        prompt_index += 1;\n\t}\n\n\tfunction handle_show_next(event) {\n\t\tshow_next();\n\t}\n\n\tfunction handle_keydown(event) {\n\t\tif (String.fromCharCode(event.keyCode) === \" \") {\n\t\t\tshow_next();\n\t\t} else {\n\t    // answer = String.fromCharCode(event.keyCode);\n\t\t}\n\t}\n</script>\n\n<style>\n\tp {\n\t\tfont-size: 30pt;\n\t}\n\tbutton {\n\t\twidth: 200px;\n\t}\n</style>\n\n<svelte:window on:keypress={handle_keydown}/>\n\n<p>\n    {#if answer_index == -1}\n      <div\n        transition:slide=\"{{ delay: 500, duration: 500 }}\"\n        style=\"padding: 10px;\"\n        >&nbsp;</div>\n    {/if}\n\t{#each facts as fact, k}\n\t  {#if k === prompt_index || k === answer_index}\n        <div\n            transition:slide=\"{{ delay: 500, duration: 500 }}\"\n            style=\"padding: 10px;\"\n            >\n        <FlashCard\n\t\t\t\t\t\t\t i={k + 1}\n\t\t\t\t\t\t\t x={facts[k][0]}\n\t\t\t\t\t\t   y={facts[k][1]}\n\t\t\t\t\t\t\t z={facts[k][2]}\n\t\t\t\t\t\t\t unknown={facts[k][3]}\n                             operator={facts[k][4]}\n\t\t\t\t\t\t\t show_answer={k === answer_index}\n\t\t\t\t\t\t\t />\n        </div>\n\t  {/if}\n\t{/each}\n</p>\n<p id=next_button>\n\t<button on:click={handle_show_next}>\n\t  next fact\n  </button>\n</p>\n",
    "<script>\n    export let launched = false;\n    // export let op_add = false;\n    // export let op_sub = false;\n    export let op_mult = true;\n    export let op_div = false;\n    export let num_problems = 100;\n\n    function toggle_op_add()\n    {\n        op_add = !op_add;\n    }\n\n    function toggle_op_mult()\n    {\n        op_mult = !op_mult;\n        if (!op_mult) {\n            op_div = true;\n        }\n    }\n\n    function toggle_op_div()\n    {\n        op_div = !op_div;\n        if (!op_div) {\n            op_mult = true;\n        }\n    }\n\n    function op_state_class(op_state)\n    {\n        return op_state ? \"op_selected\" : \"op_unselected\";\n    }\n\n    function handle_launch(e)\n    {\n        launched = true;\n    }\n</script>\n\n<style>\n\tp {\n\t\tfont-size: 30pt;\n\t}\n\n    button.operation {\n        width: 110px;\n        font-weight: bold;\n    }\n\n    button.op_selected {\n        color: #ffffff;\n        background-color: #119911;\n    }\n\n    button.op_unselected {\n        color: #222222;\n        background-color: #b0b0b0;\n    }\n\n    input {\n        width: 100px;\n    }\n</style>\n\n<p>\n    Which operations?\n</p>\n<p>\n    <!--\n    <button class=\"operation\" on:click={toggle_op_add}>+</button>\n    &nbsp;\n    <button class=\"operation\" on:click={toggle_op_sub}>-</button>\n    &nbsp;\n    -->\n    <button class=\"operation {op_state_class(op_mult)}\" on:click={toggle_op_mult}>x</button>\n    &nbsp;\n    <button class=\"operation {op_state_class(op_div)}\" on:click={toggle_op_div}>รท</button>\n</p>\n\n<p>\n    # of Problems? <input bind:value={num_problems} />\n</p>\n\n<p>\n\t<button id=go_button on:click={handle_launch}>\n\t\t&nbsp;\n\t\tgo!\n\t\t&nbsp;\n\t</button>\n</p>\n",
    "<script>\n\timport { fade } from 'svelte/transition';\n\n\texport let i;\n\texport let x;\n\texport let y;\n\texport let z;\n\texport let unknown;\n    export let operator;\n\texport let show_answer = false;\n\n    let x_unknown = unknown == 0 ? \"unknown\" : \"\";\n    let y_unknown = unknown == 1 ? \"unknown\" : \"\";\n    let z_unknown = unknown == 2 ? \"unknown\" : \"\";\n</script>\n\n<style>\n    span.problem_number {\n        display: inline-block;\n        width: 60px;\n        font-weight: bold;\n    }\n\n\tspan.number {\n        display: inline-block;\n        position: relative;\n\t\twidth: 55px;\n        text-align: center;\n\t}\n\n\tspan.factor {\n        width: 100%;\n        position: absolute;\n        top: 0px;\n        left: 0px;\n        display: inline-block;\n        text-align: center;\n\t}\n\n    span.unknown {\n        color: green;\n        font-weight: bold;\n    }\n</style>\n\n<span class=\"problem_number\">\n  <strong>{i}.</strong>\n</span>\n\n<span class=\"number {x_unknown}\">&nbsp;\n{#if unknown === 0 && !show_answer}\n<span class=\"factor\"\n    out:fade|local=\"{{ duration: 250 }}\"\n    >?</span>\n{:else}\n<span class=\"factor\"\n    in:fade|local=\"{{ delay: 250, duration: 250 }}\"\n    >\n  {x}\n</span>\n{/if}\n</span>\n\n{operator}\n\n<span class=\"number {y_unknown}\">&nbsp;\n{#if unknown === 1 && !show_answer}\n<span class=\"factor\"\n    out:fade|local=\"{{ duration: 250 }}\"\n    >?</span>\n{:else}\n<span class=\"factor\"\n    in:fade|local=\"{{ delay: 250, duration: 250 }}\"\n    >\n{y}\n</span>\n{/if}\n</span>\n\n=\n\n<span class=\"number {z_unknown}\">&nbsp;\n{#if unknown === 2 && !show_answer}\n<span class=\"factor\"\n    out:fade|local=\"{{ duration: 250 }}\"\n    >?</span>\n{:else}\n<span class=\"factor\"\n    in:fade|local=\"{{ delay: 250, duration: 250 }}\"\n    >\n{z}\n</span>\n{/if}\n</span>\n"
  ],
  "names": [],
  "mappings": "AAqEC,CAAC,eAAC,CAAC,AACF,SAAS,CAAE,IAAI,AAChB,CAAC,AACD,MAAM,eAAC,CAAC,AACP,KAAK,CAAE,KAAK,AACb,CAAC;ACjCD,CAAC,eAAC,CAAC,AACF,SAAS,CAAE,IAAI,AAChB,CAAC,AAEE,MAAM,UAAU,eAAC,CAAC,AACd,KAAK,CAAE,KAAK,CACZ,WAAW,CAAE,IAAI,AACrB,CAAC,AAED,MAAM,YAAY,eAAC,CAAC,AAChB,KAAK,CAAE,OAAO,CACd,gBAAgB,CAAE,OAAO,AAC7B,CAAC,AAED,MAAM,cAAc,eAAC,CAAC,AAClB,KAAK,CAAE,OAAO,CACd,gBAAgB,CAAE,OAAO,AAC7B,CAAC,AAED,KAAK,eAAC,CAAC,AACH,KAAK,CAAE,KAAK,AAChB,CAAC;AC7CD,IAAI,eAAe,eAAC,CAAC,AACjB,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,IAAI,AACrB,CAAC,AAEJ,IAAI,OAAO,eAAC,CAAC,AACN,OAAO,CAAE,YAAY,CACrB,QAAQ,CAAE,QAAQ,CACxB,KAAK,CAAE,IAAI,CACL,UAAU,CAAE,MAAM,AACzB,CAAC,AAED,IAAI,OAAO,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,OAAO,CAAE,YAAY,CACrB,UAAU,CAAE,MAAM,AACzB,CAAC,AAEE,IAAI,QAAQ,eAAC,CAAC,AACV,KAAK,CAAE,KAAK,CACZ,WAAW,CAAE,IAAI,AACrB,CAAC"
}